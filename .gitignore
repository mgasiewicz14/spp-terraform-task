# Byte-compiled / optimized / DLL files
__pycache__/  
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/      
lib64/    
          
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template,
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec       
             

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.* 
.cache/      
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# IDEs and editors
.vscode/
.idea/
*.project
*.pydevproject
# .DS_Store - już jest niżej w sekcji macOS

# Terraform
.terraform/
terraform.tfstate
terraform.tfstate.backup 
*.tfstate                 
*.tfstate.*               
                           
crash.log
*.tfvars                  
                           
                           
# *.tfplan                
                          

# Pliki ZIP z kodem Lambda (są generowane dynamicznie i nie powinny być wersjonowane)
# Jeśli generujesz ZIP w katalogu terraform (lub głównym projektu):
lambda_package.zip        
spp-sensor-processor.zip  

# Jeśli generujesz ZIP w podkatalogu np. 'src' (dla kodu Lambda):
# src/lambda_function.zip

# Ogólna reguła dla plików zip, jeśli są artefaktami budowania:
# *.zip                   
                          

# Pliki specyficzne dla macOS
.DS_Store                 
Desktop.ini               
Icon?                     

# Pliki specyficzne dla Windows
Thumbs.db
ehthumbs.db
Desktop.ini              

# Logi
*.log

# Inne pliki tymczasowe lub specyficzne dla systemu
*.bak
*.tmp
*~ 
